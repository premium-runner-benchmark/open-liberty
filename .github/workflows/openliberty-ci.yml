name: OpenLiberty CI

on:
  workflow_dispatch:
  pull_request:
    branches: 
    - integration
    - gh-actions
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '.gitignore'
      - '.dockerignore'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.github/ISSUE_TEMPLATE/**'
      - '.dependabot/**'
      - 'cla/**'
      - 'images/**'
      - 'logos/**'
env:
  LANG: en_US.UTF-8
jobs:
  build: #Main build always done on linix run in parallel to setup and unit-test
    name: Build Open Liberty
    runs-on: ${{ matrix.runner_type }}
    continue-on-error: true
    strategy:
      matrix:
        test_task: ["check"]
        runner_type: [ds2v2,ds2v3,d2dsv4,d2asv4,m5large,n2s2,ds3v2,ds4v2,ds5v2,f4s,c2s4,c5xlarge,f32s,f64s,ubuntu-20.04]
        #ds2v2,ds2v3,ds3v2,ds4v2,ds5v2,f32s,f64s,m5large,d2asv4,d2dsv4
        debug: ["-DRUBY_DEBUG"]
    
    env:
      #### For stat collection
      runId: ${{ matrix.runner_type }}-${{ github.workflow }}
      artifactsDir: artifacts/${{ github.repository }}
      iostatFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-iostat.txt
      vmstatFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-vmstat.txt
      timingFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-timing.txt
      ##########################

    steps:
    #### Start stat collection
    - run: mkdir -p ${{ runner.temp }}/${{ env.artifactsDir }}
    - run: iostat -yxmt 1 > ${{ runner.temp }}/${{ env.iostatFile }} &
    - run: vmstat -n 1 > ${{ runner.temp }}/${{ env.vmstatFile }} &
    - run: date -R > ${{ runner.temp }}/${{ env.timingFile }}
    ##########################
    - uses: actions/checkout@v2
      with:
        fetch-depth: 50
    - name: Set up Java
      uses: joschi/setup-jdk@v2
      with:
        java-version: 11
        openjdk_impl: openj9
    - name: Build with Gradle
      run: |
        cd dev
        chmod +x gradlew
        echo "Building Liberty.  This will take approx. 30 minutes"
        mkdir gradle && touch build.gradle.log
        ./gradlew cnf:initialize assemble > gradle/build.gradle.log
  # cd .. && zip -rq openliberty-image.zip dev/build.image/wlp/
    - name: Upload build failure
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: Build failure
        path: dev/gradle/build.gradle.log
    #### Collect/upload stats
    - run: date -R >> ${{ runner.temp }}/${{ env.timingFile }}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: perfdata
        path: ${{ runner.temp }}/${{ env.artifactsDir }}
        if-no-files-found: error
    ##########################

  process:
    name: Process Perf Data
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
          architecture: x64
      - uses: actions/checkout@v2
        with:
          repository: pjquirk/runnerperf
          path: runnerperf
      - uses: actions/checkout@v2
        with:
          repository: pjquirk/iostat-tool
          path: runnerperf/iostat-tool
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2  
        with:
          name: perfdata
          path: runnerperf/data
      - name: Prereqs
        run: sudo apt -y install datamash  
      - name: Process stats
        run: |
          cd runnerperf
          (cd iostat-tool && python setup.py develop)
          ls -l data
          script/dumpcsv.sh data output
          script/aggregate.sh output ${{ github.repository }}
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: summary-perfdata
          path: runnerperf/output/summary.csv
          if-no-files-found: error

